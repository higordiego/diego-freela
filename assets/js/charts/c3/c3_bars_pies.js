/* ------------------------------------------------------------------------------
 *
 *  # C3.js - bars and pies
 *
 *  Demo setup of bars, pies and chart combinations
 *
 *  Version: 1.0
 *  Latest update: August 1, 2015
 *
 * ---------------------------------------------------------------------------- */

$(function () {
    

    // Pie chart
    // ------------------------------

    // Generate chart
    var pie_chart = c3.generate({
        bindto: '#c3-pie-chart',
        size: { width: 350 },
        color: {
            pattern: ['#3F51B5', '#FF9800', '#4CAF50', '#00BCD4', '#F44336']
        },
        data: {
            columns: [
                ['data1', 30],
                ['data2', 120],
            ],
            type : 'pie'
        }
    });

    // Change data
    setTimeout(function () {
        pie_chart.load({
            columns: [
                ["setosa", 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1, 0.1, 0.2, 0.4, 0.4, 0.3, 0.3, 0.3, 0.2, 0.4, 0.2, 0.5, 0.2, 0.2, 0.4, 0.2, 0.2, 0.2, 0.2, 0.4, 0.1, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.3, 0.3, 0.2, 0.6, 0.4, 0.3, 0.2, 0.2, 0.2, 0.2],
                ["versicolor", 1.4, 1.5, 1.5, 1.3, 1.5, 1.3, 1.6, 1.0, 1.3, 1.4, 1.0, 1.5, 1.0, 1.4, 1.3, 1.4, 1.5, 1.0, 1.5, 1.1, 1.8, 1.3, 1.5, 1.2, 1.3, 1.4, 1.4, 1.7, 1.5, 1.0, 1.1, 1.0, 1.2, 1.6, 1.5, 1.6, 1.5, 1.3, 1.3, 1.3, 1.2, 1.4, 1.2, 1.0, 1.3, 1.2, 1.3, 1.3, 1.1, 1.3],
                ["virginica", 2.5, 1.9, 2.1, 1.8, 2.2, 2.1, 1.7, 1.8, 1.8, 2.5, 2.0, 1.9, 2.1, 2.0, 2.4, 2.3, 1.8, 2.2, 2.3, 1.5, 2.3, 2.0, 2.0, 1.8, 2.1, 1.8, 1.8, 1.8, 2.1, 1.6, 1.9, 2.0, 2.2, 1.5, 1.4, 2.3, 2.4, 1.8, 1.8, 2.1, 2.4, 2.3, 1.9, 2.3, 2.5, 2.3, 1.9, 2.0, 2.3, 1.8],
            ]
        });
    }, 4000);
    setTimeout(function () {
        pie_chart.unload({
            ids: 'data1'
        });
        pie_chart.unload({
            ids: 'data2'
        });
    }, 8000);



    // Donut chart
    // ------------------------------

    // Generate chart
    var donut_chart = c3.generate({
        bindto: '#c3-donut-chart',
        size: { width: 350 },
        color: {
            pattern: ['#3F51B5', '#FF9800', '#4CAF50', '#00BCD4', '#F44336']
        },
        data: {
            columns: [
                ['data1', 30],
                ['data2', 120],
            ],
            type : 'donut'
        },
        donut: {
            title: "Iris Petal Width"
        }
    });

    // Change data
    setTimeout(function () {
        donut_chart.load({
            columns: [
                ["setosa", 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1, 0.1, 0.2, 0.4, 0.4, 0.3, 0.3, 0.3, 0.2, 0.4, 0.2, 0.5, 0.2, 0.2, 0.4, 0.2, 0.2, 0.2, 0.2, 0.4, 0.1, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.3, 0.3, 0.2, 0.6, 0.4, 0.3, 0.2, 0.2, 0.2, 0.2],
                ["versicolor", 1.4, 1.5, 1.5, 1.3, 1.5, 1.3, 1.6, 1.0, 1.3, 1.4, 1.0, 1.5, 1.0, 1.4, 1.3, 1.4, 1.5, 1.0, 1.5, 1.1, 1.8, 1.3, 1.5, 1.2, 1.3, 1.4, 1.4, 1.7, 1.5, 1.0, 1.1, 1.0, 1.2, 1.6, 1.5, 1.6, 1.5, 1.3, 1.3, 1.3, 1.2, 1.4, 1.2, 1.0, 1.3, 1.2, 1.3, 1.3, 1.1, 1.3],
                ["virginica", 2.5, 1.9, 2.1, 1.8, 2.2, 2.1, 1.7, 1.8, 1.8, 2.5, 2.0, 1.9, 2.1, 2.0, 2.4, 2.3, 1.8, 2.2, 2.3, 1.5, 2.3, 2.0, 2.0, 1.8, 2.1, 1.8, 1.8, 1.8, 2.1, 1.6, 1.9, 2.0, 2.2, 1.5, 1.4, 2.3, 2.4, 1.8, 1.8, 2.1, 2.4, 2.3, 1.9, 2.3, 2.5, 2.3, 1.9, 2.0, 2.3, 1.8],
            ]
        });
    }, 4000);
    setTimeout(function () {
        donut_chart.unload({
            ids: 'data1'
        });
        donut_chart.unload({
            ids: 'data2'
        });
    }, 8000);



    // Bar chart
    // ------------------------------

    // Generate chart
    var bar_chart = c3.generate({
        bindto: '#c3-bar-chart',
        size: { height: 400 },
        data: {
            columns: [
                ['data1', 30, 200, 100, 400, 150, 250],
                ['data2', 130, 100, 140, 200, 150, 50]
            ],
            type: 'bar'
        },
        color: {
            pattern: ['#2196F3', '#FF9800', '#4CAF50']
        },
        bar: {
            width: {
                ratio: 0.5
            }
        },
        grid: {
            y: {
                show: true
            }
        }
    });

    // Change data
    setTimeout(function () {
        bar_chart.load({
            columns: [
                ['data3', 130, -150, 200, 300, -200, 100]
            ]
        });
    }, 6000);



    // Stacked bar chart
    // ------------------------------

var bar_stacked_chart = c3.generate({
    data: {
        x: 'x',
        columns: [
            ['x', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-07-28', '2014-07-29'],
            ['temperature', 5, 2, 4, -3, 6, 5],
            ['data2', 130, 340, 200, 500, 250, 350],
            ['data3', 500, 50, 250, 450, 60, 350]
        ],
        axes: {
         'temperature': 'y2'
        },
        type: 'bar',
        types: {
          temperature: 'line'
        },
    },
    subchart: {
      show: false
    },
    zoom: {
      enabled: true
    },
    axis: {
        x: {
            type: 'timeseries',
            tick: {
                format: '%Y-%m-%d'
            }
        },
        y: {
          label: {
            text: 'Some data',
            position: 'outer-middle'
          }
        },
        y2: {
          show: true,
          label: {
            text: 'avg. temperature',
            position: 'outer-middle'
          },
          max: 30,
          min: -10
        }
    }
});
    // Generate chart
    /*var bar_stacked_chart = c3.generate({
        bindto: '#c3-bar-stacked-chart',
        size: { height: 400 },
        color: {
            pattern: ['#FF9800', '#F44336', '#009688', '#4CAF50', '#00FF98']
        },
        data: {
            columns: [
                ['Item Sale', 120, 200, 200, 400, 150, 250, 120, 200, 200, 400, 150, 250, 120, 200, 200, 400, 150, 250, 120, 200, 200, 400, 150, 250],
                ['New Pawn', 122, 110, 104, 201, 202, 165, 122, 110, 104, 201, 202, 165, 122, 110, 104, 201, 202, 165, 122, 110, 104, 201, 202, 165],
                ['New Buy', 130, 100, 100, 200, 150, 50, 130, 100, 100, 200, 150, 50, 130, 100, 100, 200, 150, 50, 130, 100, 100, 200, 150, 50, 130],
                ['Layaway', 124, 98, 58, 77, 287, 99, 124, 98, 58, 77, 287, 99, 124, 98, 58, 77, 287, 99, 124, 98, 58, 77, 287, 99, 124, 98, 58, 77],
               
            ],
            type: 'bar',
            groups: [
                ['Item Sale', 'New Pawn', 'New Buy','Layaway']
            ]
        },
        grid: {
            x: {
                show: true
            },
            y: {
                lines: [{value:0}]
            }
        }
    });*/

    // Change data
    /*setTimeout(function () {
        bar_stacked_chart.groups([['Item Sale', 'New Pawn', 'Item Void']])
    }, 4000);
    setTimeout(function () {
        bar_stacked_chart.load({
            columns: [['Item Void', -230, -200, -200, -300, -250, -250, -100, -230, -150, -50, -150, -98, -85, -66, -85, -98, -54, -78, -63, -20]
        });
    }, 8000);
    setTimeout(function () {
      bar_stacked_chart.groups([['Item Sale', 'New Pawn', 'Item Void','New Buy', 'Layaway']])
    }, 4000);
*/


    // Combined chart
    // ------------------------------

    // Generate chart
    var combined_chart = c3.generate({
        bindto: '#c3-combined-chart',
        size: { height: 400 },
        color: {
            pattern: ['#104E8B', '#838B8B', '#6CA6CD', '#00F5FF', '#03A9F4', '#8BC34A', '#FF0000']
        },
        data: {
            x:'x',
            columns: [
                ['x', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-07-28', '2014-07-29'],
                ['Item Sale', 300, 200, 500, 400, 600, 500, 200, 500, 400, 600, 500, 200, 500, 400, 600, 500, 200, 500, 400, 600, 500, 200, 500, 400, 600, 500, 200, 500, 400, 600, 500],
                ['New Pawn', 200, 130, 90, 240, 130, 220,200, 130, 90, 240, 130, 220,200, 130, 90, 240, 130, 220,200, 130, 90, 240, 130, 220,200, 130, 240, 130, 220,200, 130],
                ['New Buy', 300, 200, 160, 400, 250, 250, 160, 400, 250, 250, 160, 400, 250, 250, 160, 400, 250, 250, 160, 400, 250, 250, 160, 400, 250, 250, 250, 160, 400, 250, 250],
                ['Layaway', 130, 120, 150, 140, 160, 150, 140, 160, 150, 140, 160, 150, 140, 160, 150, 140, 160, 150, 140, 160, 150, 140, 160, 150, 140, 160, 140, 160, 150, 140, 160],
                ['Pull Pawn', 90, 70, 20, 50, 60, 120, 20, 50, 60, 120, 20, 50, 60, 120, 20, 50, 60, 120, 20, 50, 60, 120, 20, 50, 60, 120, 20, 80, 60, 170, 300],
                ['Traffic', 200, 130, 90, 240, 130, 220, 130, 90, 240, 130, 220, 130, 90, 240, 130, 220, 130, 90, 240, 130, 220, 130, 90, 240, 130, 220,130, 90, 240, 130, 220],
                ['Voided', -200, -130, -90, -240, -130, -220,-200, -130, -90, -240, -130, -220,-200, -130, -90, -240, -130, -220,-200, -130, -90, -240, -130, -220,-200, -130, -240, -130, -220,-200, -130],
            ],
            type: 'bar',
            types: {
                
              Traffic: 'line',
                
            },
            groups: [
                ['Item Sale','New Pawn','New Buy','Layaway','Pull Pawn','Traffic','Voided']
            ]

            axes: {
         		'temperature': 'y2'
        	},
        	type: 'bar',
        	types: {
         	temperature: 'line'
        },
        }

        axis: {
        x: {
            type: 'timeseries',
            tick: {
                format: '%Y-%m-%d'
            }
        },
        y: {
          label: {
            text: 'Some data',
            position: 'outer-middle'
          }
        },
        y2: {
          show: true,
          label: {
            text: 'avg. temperature',
            position: 'outer-middle'
          },
        }
    }
        
    });



    // Scatter chart
    // ------------------------------

    // Generate chart
    var scatter_chart = c3.generate({
        size: { height: 400 },
        bindto: '#c3-scatter-chart',
        data: {
            xs: {
                setosa: 'setosa_x',
                versicolor: 'versicolor_x',
            },
            columns: [
                ["setosa_x", 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.4, 3.0, 3.0, 4.0, 4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7, 3.6, 3.3, 3.4, 3.0, 3.4, 3.5, 3.4, 3.2, 3.1, 3.4, 4.1, 4.2, 3.1, 3.2, 3.5, 3.6, 3.0, 3.4, 3.5, 2.3, 3.2, 3.5, 3.8, 3.0, 3.8, 3.2, 3.7, 3.3],
                ["versicolor_x", 3.2, 3.2, 3.1, 2.3, 2.8, 2.8, 3.3, 2.4, 2.9, 2.7, 2.0, 3.0, 2.2, 2.9, 2.9, 3.1, 3.0, 2.7, 2.2, 2.5, 3.2, 2.8, 2.5, 2.8, 2.9, 3.0, 2.8, 3.0, 2.9, 2.6, 2.4, 2.4, 2.7, 2.7, 3.0, 3.4, 3.1, 2.3, 3.0, 2.5, 2.6, 3.0, 2.6, 2.3, 2.7, 3.0, 2.9, 2.9, 2.5, 2.8],
                ["setosa", 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1, 0.1, 0.2, 0.4, 0.4, 0.3, 0.3, 0.3, 0.2, 0.4, 0.2, 0.5, 0.2, 0.2, 0.4, 0.2, 0.2, 0.2, 0.2, 0.4, 0.1, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.3, 0.3, 0.2, 0.6, 0.4, 0.3, 0.2, 0.2, 0.2, 0.2],
                ["versicolor", 1.4, 1.5, 1.5, 1.3, 1.5, 1.3, 1.6, 1.0, 1.3, 1.4, 1.0, 1.5, 1.0, 1.4, 1.3, 1.4, 1.5, 1.0, 1.5, 1.1, 1.8, 1.3, 1.5, 1.2, 1.3, 1.4, 1.4, 1.7, 1.5, 1.0, 1.1, 1.0, 1.2, 1.6, 1.5, 1.6, 1.5, 1.3, 1.3, 1.3, 1.2, 1.4, 1.2, 1.0, 1.3, 1.2, 1.3, 1.3, 1.1, 1.3],
            ],
            type: 'scatter'
        },
        color: {
            pattern: ['#4CAF50', '#F44336']
        },
        grid: {
            y: {
                show: true
            }
        },
        point: { r: 5 },
        axis: {
            x: {
                label: 'Sepal.Width',
                tick: {
                    fit: false
                }
            },
            y: {
                label: 'Petal.Width'
            }
        }
    });

    // Change data
    setTimeout(function () {
        scatter_chart.load({
            xs: {
                virginica: 'virginica_x'
            },
            columns: [
                ["virginica_x", 3.3, 2.7, 3.0, 2.9, 3.0, 3.0, 2.5, 2.9, 2.5, 3.6, 3.2, 2.7, 3.0, 2.5, 2.8, 3.2, 3.0, 3.8, 2.6, 2.2, 3.2, 2.8, 2.8, 2.7, 3.3, 3.2, 2.8, 3.0, 2.8, 3.0, 2.8, 3.8, 2.8, 2.8, 2.6, 3.0, 3.4, 3.1, 3.0, 3.1, 3.1, 3.1, 2.7, 3.2, 3.3, 3.0, 2.5, 3.0, 3.4, 3.0],
                ["virginica", 2.5, 1.9, 2.1, 1.8, 2.2, 2.1, 1.7, 1.8, 1.8, 2.5, 2.0, 1.9, 2.1, 2.0, 2.4, 2.3, 1.8, 2.2, 2.3, 1.5, 2.3, 2.0, 2.0, 1.8, 2.1, 1.8, 1.8, 1.8, 2.1, 1.6, 1.9, 2.0, 2.2, 1.5, 1.4, 2.3, 2.4, 1.8, 1.8, 2.1, 2.4, 2.3, 1.9, 2.3, 2.5, 2.3, 1.9, 2.0, 2.3, 1.8],
            ]
        });
    }, 4000);
    setTimeout(function () {
        scatter_chart.unload({
            ids: 'setosa'
        });
    }, 8000);
    setTimeout(function () {
        scatter_chart.load({
            columns: [
                ["virginica", 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1, 0.1, 0.2, 0.4, 0.4, 0.3, 0.3, 0.3, 0.2, 0.4, 0.2, 0.5, 0.2, 0.2, 0.4, 0.2, 0.2, 0.2, 0.2, 0.4, 0.1, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.3, 0.3, 0.2, 0.6, 0.4, 0.3, 0.2, 0.2, 0.2, 0.2],
            ]
        });
    }, 10000);



    // Resize chart on sidebar width change
    $(".sidebar-control").on('click', function() {
        pie_chart.resize();
        donut_chart.resize();
        bar_chart.resize();
        bar_stacked_chart.resize();
        combined_chart.resize();
        scatter_chart.resize();
    });
});